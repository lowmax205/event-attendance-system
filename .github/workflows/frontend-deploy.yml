# Frontend deployment workflow for the EAS project
# Organized into separate jobs for validation, building, and deployment

name: Deploy Frontend to GitHub Pages

on:
  # Manual dispatch only
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Validate installation
        run: |
          npm list --depth=0
          npm audit --audit-level=high

      - name: Display versions
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"

      - name: Build project
        run: |
          NODE_OPTIONS="--max-old-space-size=4096" npm run build
        env:
          VITE_BASE_PATH: ${{ secrets.VITE_BASE_PATH }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

      - name: Validate build output
        run: |
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Build failed: index.html not found"
            exit 1
          fi
          echo "‚úÖ Build validation passed"
          ls -la dist/

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: frontend/dist
          retention-days: 1

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      deployment_url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: ./dist

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  summary:
    name: Deployment Summary
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Summarize Deployment
        run: |
          echo "::notice title=‚úÖ Frontend Deployment Complete::The frontend has been successfully deployed!"
          echo "üì± Deployment URL: ${{ needs.deploy.outputs.deployment_url }}"
